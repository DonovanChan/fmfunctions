Let ( [
	quotationMark = Char ( 34 ) ;
	whitespace =
		Char ( 32 )	// space
		& Char ( 9 )	// horizontal tab
		& Char ( 10 )	// line feed
		& Char ( 11 )	// vertical tab
		& Char ( 12 )	// form feed
		& Char ( 13 ) ;	// carriate return
	nameStart = Position ( text ; #Encode ( name ) & ":" ; 1 ; index ) ;
	delimStart = PositionUnescaped ( text ; ":" ; nameStart ; 1 ; 1 ) + 1 ;
	valueStart = PositionIgnoring ( text ; whitespace ; delimStart ) ;
	char1 = Middle ( text ; valueStart ; 1 ) ;
	valueEnd =
		Case (
			char1 = quotationMark ;
				PositionUnescaped ( text ; char1 ; valueStart ; 2 ; 1 ) ;
			char1 = "{" ;
				PositionUnescaped ( text ; "}" ; valueStart ; 1 ; 1 ) ;
			char1 = "[" ;
				PositionUnescaped ( text ; "]" ; valueStart ; 1 ; 1 ) ;
			0
		) ;
	value =
		Case (
			nameStart = 0 ; "?" ;
			char1 = quotationMark ;
				Middle ( text ; valueStart + 1 ; valueEnd - valueStart - 1 ) ;
			Middle ( text ; valueStart ; valueEnd - valueStart + 1 )
		)
	] ;
	#Decode ( value)
)

/* __________________________________________________

NAME:	JSONValue ( text ; name ; index )
PURPOSE:	Retrieves value of specified pair.
EXAMPLES:
	Where $_text = "{\"a\":\"dog\",\"a\":{\"dog\"},\"a\":[\"dog\"]}"
	
	#NthValue ( $_text ; "a" ; 1 )	= "dog"
	#NthValue ( $_text ; "a" ; 2 )	= "{\"dog\"}"
	#NthValue ( $_text ; "a" ; 3 )	= "[\"dog\"]"
HISTORY:
	Created:	2012-02-13 13:00 PT - Will M. Baker
	Modified:	2012-05-29 12:00 PT - Donovan Chandler : nameStart now searches using #Encode() instead of Quote(); removed QuotationMark();
NOTES:
	All values must be wrapped in double quotes â€“ even numbers!
*/