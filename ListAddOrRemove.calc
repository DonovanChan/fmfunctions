Let ( [
	searchList = ¶ & currentList & ¶ ;
	value_exists = Position ( searchList ; ¶ & value & ¶ ; 1 ; 1 )
	 ];
	Case (
		value_exists ;
			Let ( [
				newList =
					Substitute ( searchList ;
						[ ¶ ; "¶|" ];
						[ "|" & value & ¶ ; "" ];
						[ "¶|" ; ¶ ]
					)
				];
				Middle ( newList ; 2 ; Length ( newList ) - 2 )
			) ;

		IsEmpty ( value ) ;
			currentList ;

		List ( currentList ; value )
	)
)

/* __________________________________________________

NAME:	ListAddOrRemove ( currentList ; value )
PURPOSE:	Adds or removes value from return-delimited list. Useful for adding/removing an id from a multi-key, such as for portal selections.
EXAMPLES:
	ListAddRemove ( "foo" ; "fum" )			= "foo¶fum"
	ListAddRemove ( "foo¶fum" ; "foo" )		= "fum"
	ListAddRemove ( "foo¶¶fum" ; "foo" )	= "fum¶"
	ListAddRemove ( "foo¶fum" ; "foo¶fum" )	= "fum¶fum"
HISTORY:
	Created:	2012-06-11 12:05 PT - Donovan Chandler based on function by Matt Petrowsky
	Modified:	
NOTES:
	Does NOT remove any blank lines except for leading lines.
	Does NOT support multi-line strings in "value" parameter.
	NOT optimized for large lists. (Would need to get rid of substitutions.)
*/