Let ( [
	path = GetValue ( pathList ; 1 ) ;
	pathCount = ValueCount ( pathList ) ;

	//-- Remove prefixes
	posColon = Position ( path ; ":" ; 1 ; 1 ) ;
	path2 = If ( posColon = 0 ; path ; Middle ( path ; posColon + 1 ; 999 ) ) ;
	path3 = If ( Left ( path2 ; 1 ) ≠ "/" ; path2 ; Middle ( path2 ; 2 ; 999 ) ) ;

	//-- Remove disk name
	hdName =
		GetValue (
			Substitute ( Get ( DesktopPath ) ; "/" ; ¶ ) ;
			2
		) ;
	hdNameLen = Length ( hdName ) ;
	pathNew =
		If (
			Left ( path3 ; hdNameLen + 1 ) = hdName & "/" ;
			 	Middle ( path3 ; hdNameLen + 1 ; 999 ) ;
			path
		) ;

	//-- Strip invalid characters
	pathEncoded =
		If (
			not stripInvalidChars ;
				pathNew ;
			Substitute (
				pathNew ;
				[ ¶	; " " ] ;
				[ "|"	; " " ] ;
				[ "<"	; " " ] ;
				[ ">"	; " " ] ;
				[ "..."	; "." ] ;
				[ "\""	; "" ] ;
				[ ","	; "" ]
			)
		) ;

	//-- Escape characters for shell
	pathEncoded =
		Substitute ( pathEncoded ;
			[ "'"	; "'\"'\"'" ]
		) ;
	pathEncoded = "'" & pathEncoded & "'"
	];
	List (
		If ( not IsEmpty ( pathEncoded ) ; pathEncoded ) ;
		If ( pathCount > 1 ;
			PathForShell ( RightValues ( pathList ; pathCount - 1 ) ; stripInvalidChars )
		)
	)
)

/* __________________________________________________

NAME:	PathForShell ( pathList ; stripInvalidChars )
PURPOSE:	Returns path usable in shell
EXAMPLES:
	PathForShell ( "HD/Library/FileMaker Server/Bob's data" )
	= "'/Library/FileMaker Server/Bob'"'"' data'"
NOTES:
	Need to create unit tests!
HISTORY:
	2011-11-04 14:28 PST - Donovan Chandler
	2014-03-03 17:45 PST - Donovan Chandler : Removed dependency on TextEncodeForFilePath().
	2014-05-14 11:39 PDT - Donovan Chandler : Use single quotes instead of escaping spaces, etc.
*/