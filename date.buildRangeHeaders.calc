Let ( [
	start = GetAsDate ( startDate ) ;
	startMonth = Month ( start ) ;
	startYear = Year ( start ) ;
	startDay = Day ( start ) ;
	end = GetAsDate ( endDate ) ;
	
	//-- Adjust here for incrementations beside "month"
	string =
		Case (
			interval = "month" ;
				Let ( [
					searchEnd = Date ( startMonth + 1 ; 0 ; startYear ) ;
					$searchEnd = If ( searchEnd > end ; end ; searchEnd ) ;
					$searchNext = GetAsDate ( $searchEnd + 1 )
					];
					DateMonthName ( startMonth ; 1 )  & " '" & Right ( startYear ; 2 )
				) ;
			interval = "week" ;
				Let ( [
					searchEnd = Date ( startMonth ; startDay + 7 ; startYear ) ;
					$searchEnd = If ( searchEnd > end ; end ; searchEnd ) ;
					$searchNext = GetAsDate ( $searchEnd + 1 )
					];
					"'" & Right ( startYear ; 2 ) & " Week " & WeekOfYear ( start )
				) ;
			interval = "day" ;
				Let ( [
					searchEnd = start ;
					$searchEnd = If ( searchEnd > end ; end ; searchEnd ) ;
					$searchNext = GetAsDate ( $searchEnd + 1 )
					];
					DateMonthName ( startMonth ; 1 ) & " " & startDay & ", " & startYear
				) ;
			interval = "year" ;
				Let ( [
					searchEnd = Date ( startMonth ; startDay ; startYear + 1 ) ;
					$searchEnd =
						Case (
							searchEnd > nextYearStart ;
								GetAsDate ( nextYearStart - 1 ) ;
							searchEnd > end ;
								end ;
							searchEnd
						) ;
					$searchNext = GetAsDate ( $searchEnd + 1 )
					];
					startYear
				) ;
			end
		)
	] ;
	string &
	Case (
		$searchEnd < end ;
		¶ & DateBuildRangeHeaders ( $searchNext ; end ; interval ; format )
	)
)

/* —————————————————————————————— //
NAME:
	DateBuildRangeHeaders ( startDate ; endDate ; interval ; format ) 

PURPOSE:
	Builds return-delimited list of dates in designated format

EXAMPLES:
	

HISTORY:
	Created: 2010-Aug-05 15h07 PST — Donovan A. Chandler
	
NOTES:
	format parameter intended for future enhancement
*/