/* TODO: Extract friendly codes from here instead:
http://webdesign.about.com/od/localization/l/blhtmlcodes-ascii.htm

See ref on regex conditionals: http://www.regular-expressions.info/conditional.html

Current regex for converting table to calc:

(.+?)\t(.+?)\t.*;(.*?)$
to
; [ "$1"\t; "$2" ]\t//$3

*/

Substitute ( text ;

	//-- Characters used in future substitutions
	  [ ";"		; "‡‡‡59;" ]	// Semi-colon
	; [ "&"	; "‡‡‡amp;" ]	// Ampersand
	; [ "#"	; "‡‡‡35;" ]	// Number sign
	; [ "‡‡‡"	; "&#" ]

	//-- Insert entity placeholders
//	  [ " "		; "&#09;" ]		// Horizontal tab
//	; [ " "		; "&#10;" ]		// Line feed
//	; [ " "		; "&#11; to &#12;" ]	// Unused
//	; [ " "		; "&#13;" ]		// Carriage Return
//	; [ " "		; "&#14; to &#31;" ]	// Unused
//	; [ " "		; "&#32;" ]		// Space
	; [ "!"		; "&#33;" ]		// Exclamation mark
	; [ "\""	; "&quot;" ]	// Quotation mark
	; [ "#"	; "&#35;" ]		// Number sign
	; [ "$"	; "&#36;" ]		// Dollar sign
	; [ "%"	; "&#37;" ]		// Percent sign

	; [ "'"		; "&#39;" ]		// Apostrophe
	; [ "("		; "&#40;" ]		// Left parenthesis
	; [ ")"		; "&#41;" ]		// Right parenthesis
	; [ "*"		; "&#42;" ]		// Asterisk
	; [ "+"	; "&#43;" ]		// Plus sign
	; [ ","		; "&#44;" ]		// Comma
	; [ "-"	; "&#45;" ]		// Hyphen
	; [ "."		; "&#46;" ]		// Period (fullstop)
	; [ "/"	; "&frasl;" ]	// Solidus (slash) (&#47;)
	; [ ":"		; "&#58;" ]		// Colon

	; [ "<"	; "&lt;" ]		// Less than (&#60;)
	; [ "="	; "&#61;" ]		// Equals sign
	; [ ">"	; "&gt;" ]		// Greater than (&#62;)
	; [ "?"		; "&#63;" ]		// Question mark
	; [ "@"	; "&#64;" ]		// Commercial at

	; [ "["		; "&#91;" ]		// Left square bracket
	; [ "\\"	; "&#92;" ]		// Reverse solidus (backslash)
	; [ "]"		; "&#93;" ]		// Right square bracket
	; [ "^"	; "&#94;" ]		// Caret
	; [ "_"		; "&#95;" ]		// Horizontal bar

	; [ "~"	; "&tilde;" ]	// Tilde (&#126;)
	; [ "‚"		; "&sbquo;" ]	// Single low quote
	; [ "ƒ"	; "&#131;" ]	// Function symbol
	; [ "ˆ"	; "&#136;" ]	// Hatchek
	; [ "‹"		; "&lsaquo;" ]	// Left single angle quote (&#139;)
	; [ "›"		; "&rsaquo;" ]	// Right single angle quote (&#155;)

	//-- Currency symbols
	; [ "¤"	; "&curren;" ]	// Generic Currency Symbol
	; [ "¢"	; "&cent;" ]	// Cent Sign (&#162;)
	; [ "£"	; "&pound;" ]	// Pound Sterling
	; [ "¥"	; "&yen;" ]		// Yen Symbol
	; [ "₣"	; "&#8355;" ]	// Franc Sign
	; [ "₤"	; "&#8356;" ]	// Lira Symbol
	; [ "₧"	; "&#8359;" ]	// Peseta Sign
	; [ "€"	; "&euro;" ]	// Euro Symbol

	; [ "–"		; "&ndash;" ]	// En dash (&#150; or &#8211;)
	; [ "—"	; "&mdash;" ]	// Em dash (&#151; or &#8212;)
	; [ "‚"		; "&sbquo;" ]	// Single low-9 quote (&#130; or &#8218;)
	; [ "‘"		; "&lsquo;" ]	// Left curly quote (&#145; or &#8216;)
	; [ "’"		; "&rsquo;" ]	// Right curly quote ( &#146; or &#8217;)
	; [ Code ( 8220 )	; "&ldquo;" ]	// Left curly double quote (&#147; or &#8220;)
	; [ Code ( 8221 )	; "&rdquo;" ]	// Right curly double quote (&#148; or &#8221;)
	; [ Code ( 8222 )	; "&#dbquo;" ]	// Double low-9 quote (&#8222;)
	; [ "†"	; "&dagger;" ]	// Dagger (&#134; or &#8224;)
	; [ "‡"	; "&Dagger;" ]	// Double dagger (&#135; or &#8225;)
	; [ "•"	; "&#bull;" ]	// Bullet (&#149; or &#8226;)
	; [ Code ( 8230 )	; "&#8230;" ]	// Horizontal ellipsis (&#133;)
	; [ "‰"	; "&permil;" ]	// Per thousand (&#137; or &#8240;)
	; [ "™"	; "&#8482;" ]	// Trade mark

	; [ "¡"		; "&iexcl;" ]	// Inverted exclamation point (&#161;)
	; [ "·"		; "&middot;" ]	// Middle dot (&#183;)
	; [ "§"	; "&sect;" ]		// section sign (&#167;)
	; [ "¨"	; "&uml;" ]		// umlaut/dieresis (&#168;)
	; [ "©"	; "&copy;" ]	// copyright symbol (&#169;)
	; [ "ª"		; "&ordf;" ]		// feminine ordinal (&#170;)
	; [ "«"		; "&laquo;" ]	// left angle quote marks (&#171;)
	; [ "¬"	; "&not;" ]		// not sign (&#172;)
	; [ "®"	; "&reg;" ]		// registered symbol (&#174;)
	; [ "¯"		; "&macr;" ]	// macron accent (&#175;)
	; [ "°"		; "&deg;" ]		// degree sign (&#176;)
	; [ "±"	; "&plusmn;" ]	// plus or minus (&#177;)
	; [ "²"		; "&sup2;" ]	// superscript 2 (&#178;)
	; [ "³"		; "&sup3;" ]	// superscript 3 (&#179;)
	; [ "´"	; "&acute;" ]	// acute accent (&#180;)
	; [ "µ"	; "&micro;" ]	// micro sign (Greek mu) (&#181;)

	; [ "\¶"	; "&para;" ]	// Paragraph (&#182;)
	; [ "¶"	; "<br>" ]

)

/* —————————————————————————————— //
NAME:
	TextEncodeForHTML ( text )

PURPOSE:
	Escapes characters with numeric code equivalent for use in HTML.

EXAMPLES:
	

NOTES:
	Generated using http://www.december.com/html/spec/codes.html
	See also http://www.tedmontgomery.com/tutorial/htmlchrc.html
	Function does not support encoding of integers, so don't enable those lines unless you modify the function further.

HISTORY:
	Created:	2011-Apr-19 10h08 PST — Donovan A. Chandler
	Modified:	2014-02-27 12:53 PT - Donovan Chandler : Added currency symbols; removed most unused substitutions.
	Modified:	2014-03-12 12:43 PT - Donovan Chandler : Reduced substitutions, added more characters.
*/