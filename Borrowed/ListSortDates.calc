Case (

	//--  One value left in list - return just that value
	ValueCount ( theList ) <= 1 ;
		GetValue ( theList ; 1 ) ;

	//   Default
	Let ( [
		//  split list in two
		length = ValueCount ( theList ) ;
		leftLength = Floor ( length / 2 ) ;
		rightLength = length - leftLength ;
		leftList = LeftValues ( theList ; leftLength ) ;
		rightList = RightValues ( theList ; rightLength ) ;

		//  sort each sub-list
		sortedLeft = ListSort ( leftList ) ;
		sortedRight = ListSort ( rightList ) ;

		//  merge the two sorted lists
		mergedList = ListSortLoop ( sortedLeft ; sortedRight )
		] ;
		TrimCR ( mergedList )
	)
)

/* __________________________________________________

NAME:
    ListSortDates ( theList )
    v1.1

PURPOSE:
    Sort a return-delimited list using the “mergesort” algorithm

HISTORY:
    Created by Soliant Consulting (See below or FM 8 Functions p. 228)
    2008-06-17 Donovan Chandler : Formatting and comments
    2010-11-10 Donovan Chandler : Trim trailing carriage return
    2014-09-05 Donovan Chandler : Repurpose for sorting dates

INPUT:
    list:  return-delimited list of values

OUTPUT:
    The same list, sorted ascending

DEPENDENCIES:
    Custom Functions: ListSortLoop(), TrimCR()

Function created by Soliant Consulting
www.soliantconsulting.com

Released under the Creative Commons Attribution 2.5 License
http://creativecommons.org/licenses/by/2.5/
*/