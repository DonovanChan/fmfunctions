Let ( [
	dbName = Get ( FileName ) ;
	fieldSplit = Substitute ( resultFieldName ; "::" ; ¶ ) ;
	tableName = GetValue ( fieldSplit ; 1 ) ;
	fieldName = GetValue ( fieldSplit ; 2 )
	];
	"set theURL to \"" & url & "\"¶
	set dbName to \"" & dbName & "\"¶
	set tableName to \"" & tableName & "\"¶
	set fieldName to \"" & fieldName & "\"¶
	¶
	tell application \"Safari\"¶
		set newDoc to make new document with properties {URL:theURL}¶
		¶
		-- Wait until page has loaded¶
		if my page_loaded(30) then¶
			delay 2¶
			set theText to the source of document 1¶
		end if¶
		close document 1¶
	end tell¶
	¶
	-- Update log (for debugging)¶
	--my replaceLog(theURL & return & theText,\"~/Desktop/last_page.html\")¶
	¶
	-- Set value to field¶
	try¶
		setField(dbName, tableName, fieldName, theText)¶
	on error¶
		-- Continue process if crash occurred¶
		--	Requires launcher file to be on desktop. It opens SafetyNet and continues the process.¶
		if not checkAppExists(\"FileMaker Pro Advanced\") then¶
			tell application \"FileMaker Pro Advanced\"¶
				activate¶
				tell application \"FileMaker Pro Advanced\"¶
					open ((path to desktop as text) & \"PDCA_Launcher.fp7\") as alias¶
				end tell¶
			end tell¶
		end if¶
	end try
	¶
	-- Clear variable (to clear memory)¶
	set theText to missing value¶
	¶
	-- HANDLER: Waits for page to load in Safari¶
	on page_loaded(timeout_value) -- in seconds¶
		delay 2¶
		repeat with i from 1 to timeout_value¶
			tell application \"Safari\"¶
				if (do JavaScript \"document.readyState\" in document 1) is \"complete\" then¶
					return true¶
				else if i is timeout_value then¶
					return false¶
				else¶
					delay 1¶
				end if¶
			end tell¶
		end repeat¶
		return false¶
	end page_loaded¶
	¶
	-- HANDLER: Sets FileMaker field value¶
	on setField(databaseName, tableName, fieldName, theValue)¶
		tell application \"FileMaker Pro Advanced\"¶
			tell database (databaseName as text)¶
				tell table (tableName as text)¶
					set field fieldName to theValue¶
				end tell¶
			end tell¶
		end tell¶
	end setField¶
	¶
	-- HANDLER: Replaces file with timestamped entry¶
	--	Alternative file name or location must be modified in the code¶
	on replaceLog(logEntry, logPath)¶
		do shell script \"TEXT=$(echo \" & quoted form of logEntry & \" );echo \\\"`date '+%Y.%m.%d %H:%M:%S'`¶
	$TEXT\\\" > \" & logPath¶
	end replaceLog"
)

/* —————————————————————————————— //
NAME:
	AppleScriptGetPageSource ( resultFieldName ; url )

PURPOSE:
	Returns HTML source of page at specified url and sends ot to specified field in FileMaker.

EXAMPLES:
	

HISTORY:
	Created: 2011-Aug-18 13h28 PST — Donovan A. Chandler
*/