Let ([
	//---- Parse path ----
	pathNodeEnd = Position ( path & "/" ; "/" ; 1 ; 1 ) - 1;
	pathNodeCurrent = Left ( path ; pathNodeEnd );
	pathRemaining = Middle ( path ; pathNodeEnd + 2 ; 999 );
	nodeList = Substitute( pathNodeCurrent; [ "["; ¶ ]; [ "]"; ¶ ] );
	nodeTag = GetValue( nodeList; 1);
	nodeParam = GetValue( nodeList; 2 );
	nodeIndex = Filter( nodeParam; "0123456789" );
	nodeIndex = If ( nodeIndex > 0 ; nodeIndex ; 1 );

	//---- Locate current element ----
	value = JSONValue ( text ; nodeTag ; nodeIndex )

	];
	
	Case (

		IsEmpty ( value ) ; "" ;

		//-- Continue down path
		not IsEmpty ( pathRemaining ) ;
			JSONPath ( value ; pathRemaining );

		//-- Default: return result
		value
	)
)

/* —————————————————————————————— //
NAME:	JSONPath ( text; path )
PURPOSE:	Parses JSON using simple paths.
		Inspired by XPath and JSONPath (http://goessner.net/articles/JsonPath/)
EXAMPLES:
	Where $_text = "[{\"state\":\"CA\",\"cities\":[\"Oakland\",\"Pasadena\"]},
			{\"state\":\"OR\",\"cities\":[\"Portland\"]}]"
	JSONPath ( $_text ; "state/cities" ) = "[\"Oakland\",\"Pasadena\"]"
	JSONPath ( $_text ; "state[2]/cities" ) = "[\"Portland\"]"
DEPENDENCIES:
	Custom Functions:	JSONValue()
HISTORY: 
	Created: 2012-08-7 - Donovan Chandler
*/