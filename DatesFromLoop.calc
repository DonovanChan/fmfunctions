Let ( [
  start = GetAsDate ( startDate ) ;
  dayOfWeek = DayOfWeek ( start ) ;
  isWeekend =
    Case (
      omitWeekends ;
        dayOfWeek = 7 or dayOfWeek = 1 ;
      0
    ) ;
  isOmitted = ValueCount ( FilterValues ( omitDateNumberList ; GetAsNumber ( start ) ) ) > 0 ;
  result = 
    Case (
      isWeekend or isOmitted ;
        previousResults ;
      List ( previousResults ; start )
    ) ;
  resultCount = ValueCount ( result )
  ] ;
  Case (
    resultCount ≥ Abs ( numberOfDaysToReturn ) ;
      result ;

    DatesFromLoop (
      start + If ( numberOfDaysToReturn < 0 ; -1 ; 1 ) ;
      numberOfDaysToReturn ;
      omitWeekends ;
      omitDateNumberList ;
      result
    )

  )
)

/* —————————————————————————————— //
NAME:
  DatesFromLoop ( startDate ; numberOfDaysToReturn ; omitWeekends ; omitDateNumberList ; previousResults )

PURPOSE:
  Performs recursive operation for DatesFromStart().  Returns list of dates as specified. 

EXAMPLES:
  DatesFromLoop ( "10/2/2010" ; 2 ; 1 ; 0 ; "10/1/2010" ) = "10/1/2010¶10/4/2010"
  DatesFromLoop ( "10/2/2010" ; -2 ; 1 ; 0 ; "10/1/2010" ) = "10/1/2010¶9/30/2010"

HISTORY:
  Created: 2010-Oct-15 12h11 PST — Donovan A. Chandler

NOTE:
    omitHolidays parameter currently not supported.
*/