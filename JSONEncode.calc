Case (

	IsEmpty ( text ) ; Quote ( "" ) ;

	GetAsNumber ( text ) = text ; text ;

	"\""
	& Substitute ( text ;
		  [ "\\"			; "\\\\" ]	// back slash
		; [ "\""			; "\\\"" ]	// double quote
		; [ "/"			; "\/" ]	// forward slash
		; [ Char ( 147 )		; "\\\"" ]	// left curly quote
		; [ Char ( 148 )		; "\\\"" ]	// right curly quote
		; [ Char ( 8220 )	; "\\\"" ]	// left curly quote
		; [ Char ( 8221 )	; "\\\"" ]	// right curly quote

		; [ "\¶"		; "\\¶" ]
		; [ "¶"			; "\n" ]

		//-- Collapse lines for efficiency
	//	; [ "\¶"		; ":‡:" ]
	//	; [ "¶"		; Char ( 32 ) ]	// CR to space
	//	; [ ":‡:"		; "¶" ]
	)
	& "\""

)

/* __________________________________________________

NAME:	JSONEncode ( text )
PURPOSE:	Escapes or removes invalid characters in JSON, wrapping value in double quotes.
TESTS:
	List (
	  JSONEncode ( "Jim's \fun/ place?¶" )	= "\"Jim's \\\fun\/ place?\n\""
	; JSONEncode ( "" ) = "\"\""
	; JSONEncode ( 8 ) = "8"
	)
HISTORY:
	Created:	2011-07-22 14:14 PT - Donovan Chandler
	Modified:	2013-11-03 22:07 PT - Donovan Chandler : Escapes front and back slashes.
	Modified:	2013-11-17 21:46 PT - Donovan Chandler : Fixed escaping of curly quotes.
	Modified:	2014-03-09 16:02 PT - Donovan Chandler : No longer quotes numbers.
	Modified:	2014-03-23 17:38 PDT - Donovan Chandler : Quotes empty strings.
NOTES:
	Code ( "
	" ) = 32
	Code ( "¶" ) = 13
*/