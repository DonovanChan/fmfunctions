Let ( [
	searchList = ¶ & currentList & ¶ ;
	value_exists = PatternCount ( searchList ; ¶ & value & ¶ ) ;
	currentListLength = Length ( currentList )
	 ];
	Case (
		value_exists ;
			Let ( [
				newList =
					Substitute ( searchList ;
						[ ¶ ; "¶|" ];
						[ "|" & value & ¶ ; "" ];
						[ "¶|" ; ¶ ]
					)
				 ];
				Middle (
					newList ;
					2 ;
					Length ( newList ) - 2
				)
			) ;

		IsEmpty ( value ) ;
			currentList ;

		currentList &
		If ( Right ( currentList ; 1 ) ≠ ¶ and currentListLength ; ¶ ) & value
	)
)

/* —————————————————————————————— //
NAME:
	list.addRemove ( currentList ; value )

PURPOSE:
	Adds or removes value from return-delimited list.

HISTORY:
	Created: 2011-Mar-02 12h19 PST — Donovan Chandler
	Based on old function by Matt Petrowsky of ISO Productions, Inc.

INPUT:
	currentList:  return-delimited list of values
	value:	text string to be added or removed

OUTPUT:
   Return-delimited list from currentList parameter with value added or removed

NOTES:
   Adds if "value" exists in "currentList" or removes if it does not. Useful for adding/removing an id from a multi-key, such as for portal selections.
*/